T = [[], [], [], []]

def SimilarNum(l):
    S = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0}

    N = [['###', '#.#', '#.#', '#.#', '###'],
         ['..#', '..#', '..#', '..#', '..#'],
         ['###', '..#', '###', '#..', '###'],
         ['###', '..#', '###', '..#', '###'],
         ['#.#', '#.#', '###', '..#', '..#'],
         ['###', '#..', '###', '..#', '###'],
         ['###', '#..', '###', '#.#', '###'],
         ['###', '..#', '..#', '..#', '..#'],
         ['###', '#.#', '###', '#.#', '###'],
         ['###', '#.#', '###', '..#', '###']]

    for q in range(len(N)):
        for w in range(5):
            for e in range(3):
                LED = N[q][w][e]
                if LED == '#':
                    if LED == l[w][e]: S[q] += 1
                else:
                    if l[w][e] == '#': S[q] = -999

    return sorted(S.items(), key=lambda x: (-x[1], x[0]))[0][0]

for _ in range(5):
    ind = 0
    for i in input().split():
        T[ind].append(i); ind += 1

print(f'{SimilarNum(T[0])}{SimilarNum(T[1])}:{SimilarNum(T[2])}{SimilarNum(T[3])}')
